{"version":3,"sources":["todoList/todoList.js","todo/todo.js","App.js","index.js"],"names":["TodoList","props","state","content","e","this","setState","target","value","addData","id","Math","floor","random","finished","edit","addTodoList","className","type","onInput","handleInput","placeholder","onClick","handleClick","Component","Todo","list","editTodoList","finishTodoList","deleteTodoList","useState","updateContent","setupdateContent","map","item","index","handleUpdate","App","todoList","setTodoList","count","setCount","useEffect","console","log","test","newList","editList","todo","finishedArr","removedArr","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58361845.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './todoList.css'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: \"\"\r\n        }\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ content: e.target.value })\r\n    }\r\n\r\n    handleClick() {\r\n        const addData = {\r\n            id: Math.floor(Math.random() * 10000),\r\n            content: this.state.content,\r\n            finished: false,\r\n            edit: false\r\n        }\r\n        this.props.addTodoList(addData);\r\n        this.setState({ content: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"addList-input\">\r\n                <input type=\"text\" onInput={(e) => this.handleInput(e)} value={this.state.content} placeholder=\"請輸入代辦事項\"/>\r\n                <div onClick={() => this.handleClick()}>新增代辦</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from 'react'\r\nimport './todo.css'\r\nimport { FaEdit, FaCheck, FaCheckDouble, FaRegTrashAlt } from \"react-icons/fa\";\r\n\r\nfunction Todo({ list, editTodoList, finishTodoList, deleteTodoList }) {\r\n\r\n    const [updateContent, setupdateContent] = useState(null);\r\n\r\n    const handleInput = (e) => {\r\n        setupdateContent(e.target.value)\r\n    }\r\n\r\n    const handleUpdate = (id, updateContent) => {\r\n        editTodoList(id, updateContent);\r\n        setupdateContent(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {list.map((item, index) =>\r\n                <div key={item.id} className=\"list-item-box\">\r\n\r\n                    {item.edit ? (\r\n                        <div className=\"list-item-edit\">\r\n                            <input type=\"text\" onInput={(e) => handleInput(e)} value={updateContent ? updateContent : item.content} />\r\n                            <FaCheck onClick={() => handleUpdate(item.id, updateContent ? updateContent : item.content)}></FaCheck>\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"list-item\">\r\n                                <div className={item.finished ? 'list-item-content todo-finished' : 'list-item-content todo-unfinished'}>{item.content}</div>\r\n                                <div className=\"list-item-operate\">\r\n                                    <FaEdit onClick={() => editTodoList(item.id, item.content)}></FaEdit>\r\n                                    <FaCheckDouble onClick={() => finishTodoList(item.id)}></FaCheckDouble>\r\n                                    <FaRegTrashAlt onClick={() => deleteTodoList(item.id)}></FaRegTrashAlt>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport TodoList from './todoList/todoList'\r\nimport Todo from './todo/todo'\r\n\r\nfunction App() {\r\n\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const addCount = () => {\r\n    // console.log(count);\r\n    setCount(() => count+1);\r\n\r\n\r\n    // setCount(count + 1);\r\n    // console.log(count);\r\n    //setCount('123');\r\n \r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect1', count);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect2', count);\r\n  }, [count])\r\n\r\n  // 新增代辦\r\n  const addTodoList = (list) => {\r\n    if (!list.content || /^\\s*$/.test(list.content)) {\r\n      return\r\n    }\r\n    const newList = [list, ...todoList];\r\n    setTodoList(newList);\r\n  }\r\n\r\n  // 編輯代辦\r\n  const editTodoList = (id, content) => {\r\n    const editList = [...todoList].map(todo => {\r\n      if (todo.id === id) {\r\n        todo.edit = !todo.edit;\r\n        todo.content = content;\r\n      }\r\n      return todo\r\n    });\r\n    setTodoList(editList);\r\n  }\r\n\r\n  // 完成代辦\r\n  const finishTodoList = (id) => {\r\n    const finishedArr = [...todoList].map(todo => {\r\n      if (todo.id === id) todo.finished = !todo.finished;\r\n      return todo\r\n    });\r\n    setTodoList(finishedArr);\r\n  }\r\n\r\n  // 刪除代辦\r\n  const deleteTodoList = (id) => {\r\n    const removedArr = [...todoList].filter(todo => todo.id !== id);\r\n    setTodoList(removedArr);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"title\">代辦事項</div>\r\n      <TodoList addTodoList={addTodoList} ></TodoList>\r\n      <Todo\r\n        list={todoList}\r\n        editTodoList={editTodoList}\r\n        finishTodoList={finishTodoList}\r\n        deleteTodoList={deleteTodoList}\r\n      ></Todo>\r\n      <div>{count}</div>\r\n      <button onClick={addCount}>123</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}